<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pettopia.employeefile.EmployeeFileMapper">

	<!-- addEmployee : 직원 프로필 사진 등록 -->
	<!-- employeeOne : 직원 서명 등록 -->
	<insert id="insertEmployeeFile" parameterType="com.example.pettopia.vo.EmployeeFile">
		INSERT INTO employee_file(emp_no, file_purpose, origin_file_name, file_name, file_ext, file_type, create_datetime, update_datetime)
		VALUES (#{empNo}, #{filePurpose}, #{originFileName}, #{fileName}, #{fileExt}, #{fileType}, now(), now())
	</insert>
	
	<!-- modifyEmployeeOne : 직원 프로필 사진 수정 -->
	<update id="updateEmployeeFile"  parameterType="com.example.pettopia.vo.EmployeeFile">
		 UPDATE employee_file
	    <set>
	        <if test="empNo != null and empNo != ''">
	            emp_no = #{empNo},
	        </if>
	
	        <if test="filePurpose != null and filePurpose != ''">
	            file_purpose = #{filePurpose},
	        </if>
	
	        <if test="originFileName != null and originFileName != ''">
	            origin_file_name = #{originFileName},
	        </if>
	
	        <if test="fileName != null and fileName != ''">
	            file_name = #{fileName},
	        </if>
	
	        <if test="fileExt != null and fileExt != ''">
	            file_ext = #{fileExt},
	        </if>
	
	        <if test="fileType != null and fileType != ''">
	            file_type = #{fileType},
	        </if>
	
	        update_datetime = now()
	    </set>
	    WHERE emp_file_no = #{empFileNo}
	</update>
	
	<!-- modifyEmployeeOne : 물리적 파일 삭제를 위해 db에 저장된 이름 가져오기 -->
	<select id="selectEmployeeFile">
		SELECT emp_no AS empNo
				, emp_file_no AS empFileNo
				, file_name AS fileName
				, file_ext AS fileExt
		FROM employee_file
		WHERE emp_file_no = #{empFileNo}		
	</select>
	
	<!-- employeeOne : employeeFileRest - getEmployeeSignFile (db에 저장된 서명 파일 가져오기) -->
	<select id="selectEmployeeSignFile" parameterType="String" resultType="com.example.pettopia.vo.EmployeeFile">
		SELECT emp_file_no AS empFileNo
				, emp_no AS empNo
				, file_purpose AS filePurpose
				, origin_file_name AS originFileName
				, file_name AS fileName
				, file_ext AS fileExt
				, file_type AS fileType
		FROM employee_file
		WHERE emp_no = #{empNo} 
		AND file_purpose = 'S'
	</select>
	
	<!-- employeeOne : 이미 존재하는 sign 삭제 -->
	<delete id="deleteEmployeeSignFile" parameterType="String">
		DELETE 
		FROM employee_file
		WHERE emp_no = #{empNo}
		  AND file_purpose = 'S';
	</delete>
	
	
	
</mapper>