<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pettopia.notice.NoticeMapper">
	
	<!-- 오자윤 : /notice/addNotice 공지사항 추가 -->
	<insert id="insertNotice" parameterType="com.example.pettopia.vo.Notice">
	    INSERT INTO notice (
	        writer_emp_no,
	        dept_code,
	        notice_title,
	        notice_content,
	        notice_view,
	        is_pinned,
	        create_datetime,
	        update_datetime
	    )
	    VALUES (
	        #{writerEmpNo},
	        #{deptCode},
	        #{noticeTitle},
	        #{noticeContent},
	        0,  
	        #{isPinned},
	        NOW(),
	        NOW()
	    )
	</insert>
	
	<!-- 오자윤 : /notice/addNotice 첨부파일 추가 -->
    <insert id="insertNoticeFile" parameterType="com.example.pettopia.vo.NoticeFile">
        INSERT INTO notice_file (
            notice_no,
            origin_file_name,
            file_name,
            file_ext,
            file_type,
            create_datetime,
            update_datetime
        )
        VALUES (
            #{noticeNo},
            #{originFileName},
            #{fileName},
            #{fileExt},
            #{fileType},
            NOW(),
            NOW()
        )
    </insert>

    <!-- 오자윤 : /notice/addNotice 파일첨부 취소 -->
    <select id="findFilesByNoticeNo" resultType="com.example.pettopia.vo.NoticeFile">
        SELECT 
            notice_file_no AS noticeFileNo,
            notice_no AS noticeNo,
            origin_file_name AS originFileName,
            file_name AS fileName,
            file_ext AS fileExt,
            file_type AS fileType,
            create_datetime AS createDatetime,
            update_datetime AS updateDatetime
        FROM notice_file
        WHERE notice_no = #{noticeNo}
    </select>

    <!-- 오자윤 : /notice/addNotice 모든 첨부파일 식제 -->
    <delete id="deleteFilesByNoticeNo">
        DELETE FROM notice_file
        WHERE notice_no = #{noticeNo}
    </delete>
	
	
	<!-- 공지사항 리스트 : 부서 목록 -->
	<select id="selectDivisionList" resultType="com.example.pettopia.vo.Division">
		SELECT division_code divisionCode
				, division_name divisionName
		FROM division
	</select>


	<!-- 공지사항 리스트 : 게시글 목록 -->
	<select id="selectNoticeList" parameterType="map" resultType="map">
		WITH noticeList AS (
		    (SELECT n.notice_no 
		            , n.writer_emp_no 
		            , e.emp_name 
		            , n.dept_code 
		            , di.division_code 
		            , IFNULL(di.division_name, 'ALL') AS division_name  
		            , n.notice_title 
		            , n.notice_view 
		            , n.create_datetime 
		            , n.is_pinned 
		    FROM notice n 
		    LEFT OUTER JOIN department d ON n.dept_code = d.dept_code
		    LEFT OUTER JOIN division di ON d.division_code = di.division_code
		    LEFT OUTER JOIN employee e ON n.writer_emp_no = e.emp_no
		    <where>
				    <if test="division != null">
						(di.division_code LIKE #{division} OR di.division_code IS NULL)
					</if>
			    AND n.is_pinned LIKE 'Y'
		    </where>
		    )
		   
		    UNION ALL 
		    
		    (SELECT n.notice_no 
		            , n.writer_emp_no 
		            , e.emp_name 
		            , n.dept_code 
		            , di.division_code 
		            , IFNULL(di.division_name, 'ALL') AS division_name  
		            , n.notice_title 
		            , n.notice_view 
		            , n.create_datetime 
		            , n.is_pinned 
		    FROM notice n 
		    LEFT OUTER JOIN department d ON n.dept_code = d.dept_code
		    LEFT OUTER JOIN division di ON d.division_code = di.division_code
		    LEFT OUTER JOIN employee e ON n.writer_emp_no = e.emp_no 
			<where>
				<if test="searchTitle != null">
					n.notice_title LIKE CONCAT('%' , #{searchTitle}, '%')
				</if>
				<if test="division != null">
					AND di.division_code LIKE #{division}
				</if>
				 AND n.is_pinned LIKE 'N'
			</where>
		    )
		)
		SELECT notice_no AS noticeNo
		    , writer_emp_no AS empNo
		    , emp_name AS empName
		    , dept_code AS deptCode
		    , division_code AS divisionCode
		    , division_name AS divisionName  
		    , notice_title AS noticeTitle
		    , notice_view AS noticeView
		    , create_datetime AS createDate
		    , is_pinned AS isPinned
		FROM noticeList 
		ORDER BY CASE WHEN division_code IS NULL THEN 0 ELSE 1 END
				, is_pinned DESC
				, create_datetime DESC
	</select>


	<!-- 공지사항 수정 : 제목, 내용, 부서, 조회수, 고정여부 -->
	<!-- 공지사항 상세보기 : 조회수 증가 -->
	<update id="updateNotice" parameterType="com.example.pettopia.vo.Notice" >
		UPDATE notice 
		<set>
			<if test="noticeTitle != null and noticeTitle != '' ">
				notice_title = #{noticeTitle},
			</if>
			<if test="noticeContent != null and noticeContent != '' ">
				notice_content = #{noticeContent},
			</if>

			<if test="isPinned != null and isPinned != '' ">
				is_pinned = #{isPinned},
			</if>
			<if test="updateDatetime != null and updateDatetime != '' ">
				update_datetime = now()
			</if>
			notice_view = notice_view + 1,	
		</set>
		
		WHERE notice_no = #{noticeNo} 
	</update>

	<!-- 공지사항 상세보기 : 해당 공지사항 조회 -->
	<select id="selectNoticeOne" parameterType="int" resultType="map">
		SELECT n.notice_no AS noticeNo
				, n.writer_emp_no AS writerEmpNo
				, e.emp_name AS empName
				, n.dept_code AS deptCode
				, di.division_code AS divisionCode
				, di.division_name AS divisionName
				, n.notice_title AS noticeTitle
				, n.notice_content AS noticeContent
				, n.notice_view AS noticeView
				, n.create_datetime AS createDateTime
				, n.is_pinned AS isPinned
				, IFNULL(nf.notice_file_no, 'No') AS noticeFileNo
				, IFNULL(nf.origin_file_name, 'No') AS originFileName
				, IFNULL(nf.file_name, 'No') AS fileName
				, IFNULL(nf.file_ext , 'No') AS fileExt
				, IFNULL(nf.file_type , 'No') AS fileType
		FROM notice n 
		LEFT OUTER JOIN department d ON n.dept_code = d.dept_code
		LEFT OUTER JOIN division di ON d.division_code = di.division_code
		LEFT OUTER JOIN employee e ON n.writer_emp_no = e.emp_no
		LEFT JOIN notice_file nf ON n.notice_no = nf.notice_no
		WHERE n.notice_no = #{noticeNo}
	</select>





	
</mapper>